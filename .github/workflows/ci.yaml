name: CI
on:
  pull_request:
  push:
    branches:
      - main
  workflow_call:

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install UV
        uses: astral-sh/setup-uv@v6

      - name: run pytest
        run: uv run pytest -n 8 -v

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install UV
        uses: astral-sh/setup-uv@v6

      - name: run pre-commit
        run: uv run pre-commit run --all-files

  check-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install UV
        uses: astral-sh/setup-uv@v6

      - name: ensure docs build
        run: make docs-build


  docs:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref_name == 'main'
    environment: github-pages
    permissions:
      pages: write
      id-token: write
    needs:
    - test
    - pre-commit
    - check-docs
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install UV
        uses: astral-sh/setup-uv@v6

      - name: build docs
        run: make docs-build

      - name: Create artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref_name == 'main'
    needs:
    - test
    - pre-commit
    - check-docs
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install UV
        uses: astral-sh/setup-uv@v6

      - name: Make a release
        run: uv run scripts/manage_project.py release
        env:
          GH_TOKEN: ${{ github.token }}

  publish:
    name: Publish
    needs:
    - release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref_name == 'main'

    environment:
      name: pypi
      url: https://pypi.org/p/brewing

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install UV
        uses: astral-sh/setup-uv@v6

      - name: Publish distribution
        run: uv run scripts/manage_project.py publish
        env:
          GH_TOKEN: ${{ github.token }}
