name: CI
on:
  pull_request:
  push:
    branches:
      - main
  workflow_call:

jobs:

  decisions:
    name: decisions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install UV
        uses: astral-sh/setup-uv@v6

      - name: build matrix
        run: |
          echo MATRIX="$(uv run scripts/publish_matrix.py matrix)" |  tee -a "$GITHUB_OUTPUT"
        id: matrix
    outputs:
      MATRIX: ${{ steps.matrix.outputs.MATRIX }}

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install UV
        uses: astral-sh/setup-uv@v6

      - name: run pre-commit
        run: uv run pre-commit run --all-files

      - name: run pytest
        run: uv run pytest -v

      - name: ensure docs build
        run: make docs-build

  docs:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref_name == 'main'
    environment: github-pages
    permissions:
      pages: write
      id-token: write
    needs:
    - test
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install UV
        uses: astral-sh/setup-uv@v6

      - name: build docs
        run: make docs-build

      - name: Create artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

  publish:
    name: Publish
    needs:
    - test
    - decisions
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref_name == 'main'
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.decisions.outputs.MATRIX) }}

    environment:
      name: ${{ matrix.environment_name }}
      url: ${{ matrix.environment_url }}

    permissions:
      id-token: write

    steps:
      - name: prints matrix
        run: echo '${{ toJSON(matrix) }}'

      - name: Checkout
        uses: actions/checkout@v5

      - name: Install UV
        uses: astral-sh/setup-uv@v6

      - name: Create the dist
        run: uv build "${{ matrix.path }}" --out-dir dist

      - name: Publish distribution (test)
        run: uv publish --trusted-publishing always --index testpypi
        if: matrix.environment_name == 'testpypi'

      - name: Publish distribution
        run: uv publish --trusted-publishing always
        if: matrix.environment_name == 'pypi'
