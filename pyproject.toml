[project]
name = "project-manager"
dynamic = ["version", "urls"]
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Mike Cowie", email = "24739590+mikemcowie@users.noreply.github.com" }
]
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.16.2",
    "asyncpg>=0.30.0",
    "fastapi[standard]>=0.115.13",
    "passlib[argon,argon2]>=1.7.4",
    "psycopg[binary]>=3.2.9",
    "pydantic-settings>=2.9.1",
    "pydantic[email]>=2.11.7",
    "pyjwt>=2.10.1",
    "pyyaml>=6.0.2",
    "sqlalchemy>=2.0.41",
    "structlog>=25.4.0",
    "typer>=0.16.0",
    "uvicorn>=0.34.3",
]

[dependency-groups]
dev = [
    "coverage>=7.9.1",
    "ipython>=9.3.0",
    "mypy>=1.16.1",
    "polyfactory>=2.21.0",
    "pytest>=8.4.1",
    "pytest-alembic>=0.12.1",
    "pytest-cov>=6.2.1",
    "pytest-html>=4.1.1",
    "pytest-subtests>=0.14.2",
    "ruff>=0.12.0",
    "testcontainers>=4.10.0",
    "types-passlib>=1.7.7.20250602",
]



[project.scripts]
project-manager = "project_manager.cli:cli"
dev = "project_manager.cli:dev"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/project_manager/_version.py"

[tool.hatch.metadata.hooks.vcs]

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.ruff.lint]
extend-select = [
    "A",
    "B",
    "Q",
    "C4",
    "DTZ",
    "FIX",
    "ISC",
    "ICN",
    "LOG",
    "T",
    "PT",
    "SLF",
    "SIM",
    "TID",
    "ARG",
    "PTH",
    "I",
    "C90",
    "N",
    "UP",
    "FURB",
    "RUF",
    "TRY",
    "TC",
    "PERF",
    "PL",
    "UP",
    ]
extend-ignore = [
    "A002",
    "TRY003", # disagree about error message length
    "N818", # disagree about error naming
    "PLC0414",
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "ARG001", # pytest fixtures may cause unused function args to be valid
    "PLR2004" # magic values are reasonable in tests
    ]

[tool.pytest.ini_options]
addopts = "--import-mode=importlib --cov-report=html --cov-report=term --cov=. --cov-fail-under=90 --cov-context=test --cov-branch --html=testreport/index.html"
python_files = [
    "test_*.py",
    "*_test.py",
    "feat_*.py",
]

[tool.coverage.run]
concurrency = ["thread", "greenlet"]

[tool.coverage.report]
omit = [
    "src/openlms/_version.py"
]
exclude_also = [
    'def __repr__',
    'if self.debug:',
    'if settings.DEBUG',
    'raise AssertionError',
    'raise NotImplementedError',
    'if 0:',
    'if __name__ == .__main__.:',
    'if TYPE_CHECKING:',
    'class .*\bProtocol\):',
    '@(abc\.)?abstractmethod',
    'assert False',
]

[tool.mypy]
check_untyped_defs = true
strict = true
